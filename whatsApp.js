const { Client, LocalAuth } = require("whatsapp-web.js");
const qrcode = require("qrcode-terminal");
const { OpenAIApi, Configuration } = require("openai");
require("dotenv").config();
const path = require("path");
const { default: axios } = require("axios");
const url = `https://api.telegram.org/bot${process.env.TOKEN}/sendMessage`;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI API
const configuration = new Configuration({
    apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ —Å–µ—Å—Å–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        headless: true, // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Puppeteer —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ headless —Ä–µ–∂–∏–º–µ
    },
});

client.on("qr", (qr) => {
    qrcode.generate(qr, { small: true });
});

client.on("authenticated", (session) => {
    console.log(
        "Authenticated with session:",
        session ? JSON.stringify(session) : "undefined"
    );
});

client.on("auth_failure", (msg) => {
    console.error("Authentication failed:", msg);
});

client.on("disconnected", (reason) => {
    console.log("Client was logged out:", reason);
});

client.on("ready", () => {
    console.log("Client is ready!");
});

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
const chatHistories = {};

// –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞
const systemMessage = {
    role: "system",
    content:
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –∫–æ–º–ø–∞–Ω–∏—é '–¢–∏–±–µ—Ç—Å–∫–∞—è'. –ú—ã —Ä–∞–¥—ã –≤–∞–º –ø–æ–º–æ—á—å! –ö–∞–∫–æ–π —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–∫–∞–∑?/n---/n1. –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞:–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–∏—Ç –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á—ë—Ç —Ç–æ –æ—Ç–≤–µ—Ç—å: '–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—á–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ 'üëçüèª''!/n---/n2. –ó–∞–ø—Ä–æ—Å —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ (—Å—Ç–∞–∫–∞–Ω—ã, –∫—É–ª–µ—Ä—ã):–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –ø–µ—Ä–µ—á–µ–Ω—å –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ –∏ —Ç–æ–≤–∞—Ä–æ–≤, –≤–∫–ª—é—á–∞—è —Å—Ç–∞–∫–∞–Ω—ã –∏ –∫—É–ª–µ—Ä—ã, –ø–æ —Å—Å—ã–ª–∫–µ:[tibetskaya.kz/accessories](https://tibetskaya.kz/accessories). –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –∑–∞–∫–∞–∑./n---/n3. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –≤–ø–µ—Ä–≤—ã–µ –∏–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω –≤ —Ç–∏–ø–µ –±—É—Ç—ã–ª–µ–π:/n–í—ã –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç–µ —É –Ω–∞—Å –≤–æ–¥—É –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑? –û—Ç–≤–µ—Ç—å—Ç–µ ¬´–¥–∞¬ª –∏–ª–∏ ¬´–Ω–µ—Ç¬ª./n/n- –ï—Å–ª–∏ ¬´–¥–∞¬ª: /n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É –Ω–∞ –¥–Ω–µ –±—É—Ç—ã–ª–µ–π. –í —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–∏—Ñ—Ä–∞:/n- 7 ‚Äî —ç—Ç–æ –ø–æ–ª–∏–∫–∞—Ä–±–æ–Ω–∞—Ç, —Ç–∞–∫–∏–µ –±—É—Ç—ã–ª–∏ –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º./n- 1 ‚Äî —ç—Ç–æ –ü–≠–¢ (–ø–æ–ª–∏—ç—Ç–∏–ª–µ–Ω—Ç–µ—Ä–µ—Ñ—Ç–∞–ª–∞—Ç), —Ç–∞–∫–∏–µ –±—É—Ç—ã–ª–∏ –º—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º./n–ï—Å–ª–∏ –Ω–µ—Ç –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏, —ç—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ –ü–≠–¢-–±—É—Ç—ã–ª—å. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–ª–∏–∫–∞—Ä–±–æ–Ω–∞—Ç–Ω—É—é –±—É—Ç—ã–ª—å –∑–∞ 4500 —Ç–µ–Ω–≥–µ./n- –ï—Å–ª–∏ ¬´–Ω–µ—Ç¬ª: –û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–æ–º–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ª—å–∫–æ –±—É—Ç—ã–ª–µ–π –≤–∞–º –Ω—É–∂–Ω–æ –∏ –Ω–∞ –∫–∞–∫–æ–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∏—Ç—å./n---/n4. –£—Å–ª–æ–≤–∏—è –∑–∞–∫–∞–∑–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –º–∏–Ω–∏–º—É–º):–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ ‚Äî 2 –±—É—Ç—ã–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å 2 –±—É—Ç—ã–ª—è –Ω–∞ –æ–±–º–µ–Ω –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫—É–ø–∫—É –Ω–æ–≤–æ–π –±—É—Ç—ã–ª–∫–∏ –∑–∞ 4500 —Ç–µ–Ω–≥–µ./n---/n5. –ó–∞–ø—Ä–æ—Å –æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏:–ú—ã –º–æ–∂–µ–º –ø–æ–∑–≤–æ–Ω–∏—Ç—å –≤–∞–º –∑–∞ —á–∞—Å –¥–æ –¥–æ—Å—Ç–∞–≤–∫–∏. –ï—Å–ª–∏ –≤–∞—à –∞–¥—Ä–µ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—è–¥–æ–º —Å –∞–∫–≤–∞–º–∞—Ä–∫–µ—Ç–æ–º '–¢–∏–±–µ—Ç—Å–∫–∞—è', –¥–æ—Å—Ç–∞–≤–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∑–∞ —á–∞—Å. –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∞–∫–≤–∞–º–∞—Ä–∫–µ—Ç –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: [–∞–∫–≤–∞–º–∞—Ä–∫–µ—Ç '–¢–∏–±–µ—Ç—Å–∫–∞—è'](http://surl.li/zwqxvr)./n---/n6. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—á–µ–º –≥—Ä–∞—Ñ–∏–∫–µ:–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ —Å—É–±–±–æ—Ç—É. –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ ‚Äî –≤—ã—Ö–æ–¥–Ω–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã –∑–∞—Ä–∞–Ω–µ–µ./n---/n7. –ó–∞–ø—Ä–æ—Å –Ω–∞ —á–∏—Å—Ç–∫—É –∫—É–ª–µ—Ä–∞:–ß–∏—Å—Ç–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫—É–ª–µ—Ä–∞ —Å—Ç–æ–∏—Ç –æ—Ç 4000 —Ç–µ–Ω–≥–µ. –ï—Å–ª–∏ –≤—ã –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç–µ –±—É—Ç—ã–ª–∏ —É –Ω–∞—Å, —Ç–æ –Ω–∞ —á–∏—Å—Ç–∫—É –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å–∫–∏–¥–∫–∞ 50%. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –∑–∞—Ä–∞–Ω–µ–µ, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ —á–∏—Å—Ç–∫–∞ –∫—É–ª–µ—Ä–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞—à–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞./n---/n9.–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏: +77475315558./n---/n10. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ –ø–æ—Å–ª–µ 22:00 –¥–æ 8:00 –ø–æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É:–ú—ã –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è./n---/n11. –ü—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞–∫–∞–∑–∞ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å: ‚Äò–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∏ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑—É, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ –Ω–æ–º–µ—Ä—É +77475315558. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!‚Äô",
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ GPT –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
async function getGPTResponse(chatHistory) {
    let attempts = 0;
    const maxAttempts = 3; // –ú–∞–∫—Å–∏–º—É–º 3 –ø–æ–ø—ã—Ç–∫–∏
    const retryDelay = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∏—Å—Ç–æ—Ä–∏–µ–π
    const messages = [systemMessage, ...chatHistory];

    while (attempts < maxAttempts) {
        try {
            const response = await openai.createChatCompletion({
                model: "gpt-4",
                messages: messages, // –ø–µ—Ä–µ–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
                max_tokens: 500,
                temperature: 0.7,
            });
            return response.data.choices[0].message.content.trim();
        } catch (error) {
            if (error.response && error.response.status === 429) {
                console.log("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...");
                attempts++;
                await new Promise((resolve) => setTimeout(resolve, retryDelay));
            } else {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI:", error);
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.";
            }
        }
    }
    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ OpenAI.";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
function saveMessageToHistory(chatId, message, role) {
    if (!chatHistories[chatId]) {
        chatHistories[chatId] = [];
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ —Å —Ä–æ–ª—å—é
    chatHistories[chatId].push({
        role: role,
        content: message,
    });

    // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 8 –ø–∞—Ä —Å–æ–æ–±—â–µ–Ω–∏–π (16 —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–≥–æ)
    if (chatHistories[chatId].length > 10) {
        chatHistories[chatId].shift(); // –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 16
    }
}

async function getSummary(dialog) {
    let attempts = 0;
    const maxAttempts = 3; // –ú–∞–∫—Å–∏–º—É–º 3 –ø–æ–ø—ã—Ç–∫–∏
    const retryDelay = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∏—Å—Ç–æ—Ä–∏–µ–π
    const messages = [
        {
            role: "system",
            content:
                "–°–æ—Å—Ç–∞–≤—å –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞. –°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É—Ç—ã–ª–µ–π: [—Ü–∏—Ñ—Ä–∞]', –∑–∞—Ç–µ–º —É–∫–∞–∂–∏ –∞–¥—Ä–µ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: '–ê–¥—Ä–µ—Å: [–∞–¥—Ä–µ—Å]', –∞ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–¥–æ–ª–∂–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ.",
        },
        {
            role: "user",
            content: dialog,
        },
    ];

    while (attempts < maxAttempts) {
        try {
            const response = await openai.createChatCompletion({
                model: "gpt-4",
                messages: messages,
                max_tokens: 300,
                temperature: 0.7,
            });
            return response.data.choices[0].message.content.trim();
        } catch (error) {
            if (error.response && error.response.status === 429) {
                console.log("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...");
                attempts++;
                await new Promise((resolve) => setTimeout(resolve, retryDelay));
            } else {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI:", error);
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.";
            }
        }
    }
    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ OpenAI.";
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
client.on("message", async (msg) => {
    const chatId = msg.from;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    saveMessageToHistory(chatId, msg.body, "user");

    if (msg.body) {
        if (
            msg.body.toLowerCase().includes("–∫–∞–Ω–∞") ||
            msg.body.toLowerCase().includes("–∫–∞–Ω–∞—Ç") ||
            msg.body.toLowerCase().includes("“õ–∞–Ω–∞—Ç")
        ) {
            const message =
                "–ß—Ç–æ –±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ö–∞–Ω–∞—Ç–æ–º –ø—Ä–æ—à—É –≤–∞—Å –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ:\n\nhttps://wa.me/77015315558";
            client.sendMessage(chatId, message);

            saveMessageToHistory(chatId, message, "assistant");
        } else {
            // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ GPT
            const gptResponse = await getGPTResponse(chatHistories[chatId]);

            if (
                gptResponse.toLowerCase().includes("–∑–∞–∫–∞–∑") &&
                gptResponse.toLowerCase().includes("–ø—Ä–∏–Ω—è—Ç")
            ) {
                const CHAT_ID = "-1002433505684";
                const CLIENT_NUMBER = chatId.slice(0, 11);

                let dialog = "\n";

                chatHistories[chatId].forEach((message) => {
                    if (message.role === "user") {
                        dialog += `–∫–ª–∏–µ–Ω—Ç: ${message.content}\n`;
                    } else if (message.role === "assistant") {
                        dialog += `–±–æ—Ç: ${message.content}\n`;
                    }
                });

                const summary = await getSummary(dialog);

                const CLIENT_MESSAGE = `–ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–∫–∞–∑:\n–ù–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞: +${CLIENT_NUMBER}\n${summary}`;

                axios
                    .post(
                        url,
                        new URLSearchParams({
                            chat_id: CHAT_ID,
                            text: CLIENT_MESSAGE,
                        }).toString(),
                        {
                            headers: {
                                "Content-Type":
                                    "application/x-www-form-urlencoded",
                            },
                        }
                    )
                    .then((response) => {
                        console.log(
                            "Message sent successfully:",
                            response.data
                        );
                    })
                    .catch((error) => {
                        console.error("Error sending message:", error);
                    });
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            client.sendMessage(chatId, gptResponse);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
            saveMessageToHistory(chatId, gptResponse, "assistant");
            if (
                msg.body.toLowerCase() === "–æ–∫" ||
                msg.body.toLowerCase() === "ok"
            ) {
                chatHistories[chatId] = [];
            }
        }
    }
});

client.initialize();
